variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SSL_NO_VERIFY: "true"


stages:
- compile
- precheck
- check
- validate


.build_template: &build_template
  image:
    hepstore/hepbase-$ARCH
  stage: compile
  except:
    - schedules
  script:
    - shopt -s expand_aliases
    - set -e
    - BUILD_PREFIX="$CI_PROJECT_DIR"
    - MAKE="make -j $(nproc)"
    #/build_$ARCH"
    - mkdir -p $BUILD_PREFIX
    - INSTALL_PREFIX="$CI_PROJECT_DIR/local_$ARCH"
    - mkdir -p $INSTALL_PREFIX
    - TEST_PREFIX="$CI_PROJECT_DIR/test_$ARCH"
    - mkdir -p $TEST_PREFIX
    ## Build the core library
    # - export CPPFLAGS="$CPPFLAGS -DNDEBUG"
    #- export PATH=$INSTALL_PREFIX/bin:$PATH
    - autoreconf -i
    - cd $BUILD_PREFIX
    - if [[ "$ALLANAS" != "1" ]]; then ANAOPT="--disable-analyses"; fi
    - CONF="./configure --prefix=$INSTALL_PREFIX $ANAOPT --with-yoda=/usr/local --with-hepmc=/usr/local --with-fastjet=/usr/local"
    - if (echo $ARCH | grep -q hepmc3); then CONF=${CONF/with-hepmc/with-hepmc3}; fi
    - echo $CONF
    - $CONF
    - $MAKE
    - $MAKE check
    - $MAKE install
    - cp rivetenv.sh rivetenv.csh $INSTALL_PREFIX/
    ## Basic testing
    - source $INSTALL_PREFIX/rivetenv.sh
    - rivet -h
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR
      # - test/
      # - local_$ARCH/
    expire_in: 1 week


build_ubuntu_gcc_hepmc2_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc2-py3
  <<: *build_template

build_ubuntu_gcc_hepmc3_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc3-py3
  <<: *build_template

build_ubuntu_clang_hepmc2_py3:
  variables:
    ARCH: ubuntu-clang-hepmc2-py3
  <<: *build_template

build_ubuntu_clang_hepmc3_py3:
  variables:
    ARCH: ubuntu-clang-hepmc3-py3
  <<: *build_template

build_fedora_gcc_hepmc2_py3:
  variables:
    ARCH: fedora-gcc-hepmc2-py3
  <<: *build_template

build_fedora_gcc_hepmc3_py3:
  variables:
    ARCH: fedora-gcc-hepmc3-py3
  only: [schedules]
  image:
    hepstore/hepbase-fedora-gcc-hepmc3-py3
  <<: *build_template

build_debian_gcc_hepmc2_py2:
  variables:
    ARCH: debian-gcc-hepmc2-py2
  image:
    hepstore/hepbase-debian-gcc-hepmc2-py2
  <<: *build_template

build_debian_gcc_hepmc3_py2:
  variables:
    ARCH: debian-gcc-hepmc3-py2
  only: [schedules]
  <<: *build_template


get_test_hepmc:
  image:
    jgoclawski/wget
  stage: precheck
  except:
    - schedules
  script:
    - URL1=https://rivetval.web.cern.ch/rivetval/HEPMC/LHC-13-Top-All.hepmc.gz
    - URL2=https://cgutscho.web.cern.ch/cgutscho/LHC-13-Top-All.hepmc.gz
    - for u in $URL1 $URL2; do wget --no-check-certificate $u -O tt.hepmc.gz && break; done
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/tt.hepmc.gz
    expire_in: 1 week


.check_plugin_template: &check_plugin_template
  image:
    hepstore/hepbase-$ARCH
  stage: check
  except:
    - schedules
  script:
    - INSTALL_PREFIX="$CI_PROJECT_DIR/local_$ARCH"
    - TEST_PREFIX="$CI_PROJECT_DIR/test_$ARCH"
    - source $INSTALL_PREFIX/rivetenv.sh
    - cd $TEST_PREFIX
    ## Identify changed routines + a few standard ones for CI tests
    - echo $ALLANAS
    - |
      if [[ "$ALLANAS" != "1" ]]; then
        $CI_PROJECT_DIR/ci/getAffectedRoutines.sh $CI_PROJECT_DIR/anasToCompile.txt
        find $CI_PROJECT_DIR/analyses | grep MC_TTBAR | grep cc  >> $CI_PROJECT_DIR/anasToCompile.txt
        find $CI_PROJECT_DIR/analyses | grep ATLAS_2018_I1656578 | grep cc  >> $CI_PROJECT_DIR/anasToCompile.txt
        find $CI_PROJECT_DIR/analyses | grep ATLAS_2018_I1646686 | grep cc  >> $CI_PROJECT_DIR/anasToCompile.txt
        find $CI_PROJECT_DIR/analyses | grep ATLAS_2017_I1614149 | grep cc  >> $CI_PROJECT_DIR/anasToCompile.txt
        sort --unique $CI_PROJECT_DIR/anasToCompile.txt -o $CI_PROJECT_DIR/anasToCompile.txt
        cat $CI_PROJECT_DIR/anasToCompile.txt
        ## Build changed routines
        rivet-build RivetModifiedAnas.so `cat $CI_PROJECT_DIR/anasToCompile.txt`
        mkdir -p $INSTALL_PREFIX/lib/Rivet
        mkdir -p $INSTALL_PREFIX/share/Rivet
        cp RivetModifiedAnas.so $INSTALL_PREFIX/lib/Rivet/
        cat $CI_PROJECT_DIR/anasToCompile.txt | while read p; do cp ${p/%.cc}* $INSTALL_PREFIX/share/Rivet/; done
      fi
    ## Test analysis loading and listing
    - rivet --list-analyses
    - rivet-mkanalysis MY_TEST
    - rivet-build MY_TEST.cc
    - rivet --pwd --list-analyses
    ## Test standard analyses on a small event sample
    - rivet --pwd -a MC_TTBAR:TTMODE=ANYLEP,ATLAS_2017_I1614149,ATLAS_2018_I1646686,ATLAS_2018_I1656578 -H ttbar_test_run.yoda $CI_PROJECT_DIR/tt.hepmc.gz
  artifacts:
    when: always
    paths:
      - local_$ARCH/
      - test_$ARCH/
    expire_in: 1 week


check_plugin_ubuntu_gcc_hepmc2_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc2-py3
  needs: [build_ubuntu_gcc_hepmc2_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_ubuntu_gcc_hepmc3_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc3-py3
  needs: [build_ubuntu_gcc_hepmc3_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_ubuntu_clang_hepmc2_py3:
  variables:
    ARCH: ubuntu-clang-hepmc2-py3
  needs: [build_ubuntu_clang_hepmc2_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_ubuntu_clang_hepmc3_py3:
  variables:
    ARCH: ubuntu-clang-hepmc3-py3
  needs: [build_ubuntu_clang_hepmc3_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_fedora_gcc_hepmc2_py3:
  variables:
    ARCH: fedora-gcc-hepmc2-py3
  needs: [build_fedora_gcc_hepmc2_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_fedora_gcc_hepmc3_py3:
  variables:
    ARCH: fedora-gcc-hepmc3-py3
  only: [schedules]
  needs: [build_fedora_gcc_hepmc3_py3, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_debian_gcc_hepmc2_py2:
  variables:
    ARCH: debian-gcc-hepmc2-py2
  needs: [build_debian_gcc_hepmc2_py2, get_test_hepmc]
  <<: *check_plugin_template

check_plugin_debian_gcc_hepmc3_py2:
  variables:
    ARCH: debian-gcc-hepmc3-py2
  only: [schedules]
  needs: [build_debian_gcc_hepmc3_py2, get_test_hepmc]
  <<: *check_plugin_template



.make_plots_template: &make_plots_template
  image:
    hepstore/hepbase-$ARCH-latex
  stage: validate
  except:
    - schedules
  script:
    - INSTALL_PREFIX="$CI_PROJECT_DIR/local_$ARCH"
    - TEST_PREFIX="$CI_PROJECT_DIR/test_$ARCH"
    - source $INSTALL_PREFIX/rivetenv.sh
    - cd $TEST_PREFIX
    - rivet-mkhtml --errs -o ttbar_test_plots ttbar_test_run.yoda
  artifacts:
    when: always
    paths:
      - test_$ARCH/ttbar_test_plots/
    expire_in: 1 week
  artifacts:
    when: always
    paths:
      - test_$ARCH/ttbar_test_plots
    expire_in: 1 week


make_plots_ubuntu_gcc_hepmc2_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc2-py3
  needs: [check_plugin_ubuntu_gcc_hepmc2_py3]
  <<: *make_plots_template

make_plots_ubuntu_gcc_hepmc3_py3:
  variables:
    ARCH: ubuntu-gcc-hepmc3-py3
  only: [schedules]
  needs: [check_plugin_ubuntu_gcc_hepmc3_py3]
  <<: *make_plots_template

make_plots_ubuntu_clang_hepmc2_py3:
  variables:
    ARCH: ubuntu-clang-hepmc2-py3
  only: [schedules]
  needs: [check_plugin_ubuntu_clang_hepmc2_py3]
  <<: *make_plots_template

make_plots_ubuntu_clang_hepmc3_py3:
  variables:
    ARCH: ubuntu-clang-hepmc3-py3
  only: [schedules]
  needs: [check_plugin_ubuntu_clang_hepmc3_py3]
  <<: *make_plots_template

make_plots_fedora_gcc_hepmc2_py3:
  variables:
    ARCH: fedora-gcc-hepmc2-py3
  needs: [check_plugin_fedora_gcc_hepmc2_py3]
  <<: *make_plots_template

make_plots_fedora_gcc_hepmc3_py3:
  variables:
    ARCH: fedora-gcc-hepmc3-py3
  only: [schedules]
  needs: [check_plugin_fedora_gcc_hepmc3_py3]
  <<: *make_plots_template

make_plots_debian_gcc_hepmc2_py2:
  variables:
    ARCH: debian-gcc-hepmc2-py2
  needs: [check_plugin_debian_gcc_hepmc2_py2]
  <<: *make_plots_template

make_plots_debian_gcc_hepmc3_py2:
  variables:
    ARCH: debian-gcc-hepmc3-py2
  only: [schedules]
  needs: [check_plugin_debian_gcc_hepmc3_py2]
  <<: *make_plots_template
